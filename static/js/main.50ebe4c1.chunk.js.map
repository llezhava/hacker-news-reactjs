{"version":3,"sources":["comments/comments.module.css","story/card.module.css","common/styles/header.module.css","app.module.css","common/styles/pagination.module.css","serviceWorker.js","common/NotFound.js","common/pagination/Paginate.js","common/pagination/Pagination.js","services/operationTypes.js","services/hackernewsapi.js","services/timeOperations.js","story/Card.js","common/WaitingForData.js","story/SingleItem.js","story/Stories.js","story/StoriesRouter.js","user/User.js","user/Submissions.js","comments/Card.js","comments/Comment.js","comments/Comments.js","user/Comments.js","user/Router.js","common/Header.js","comments/FullStory.js","App.js","index.js","Root.js"],"names":["module","exports","fullStory","comments","comment","commentBody","children","card","root","index","content","meta","header","nav","logo","container","Boolean","window","location","hostname","match","NotFound","props","react_default","a","createElement","Paginate","_ref","currentPage","path","url","isHomePage","console","log","replace","getPath","lastIndexOf","length","slice","normalizePath","nextPage","Number","previousPage","className","styles","Link","to","concat","Pagination","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","items","handleChangePage","bind","assertThisInitialized","params","page","prevProps","_this2","isPageChanged","isDataChanged","allData","isIndexingChanged","addIndex","setState","perPage","currentStart","arguments","undefined","_this$props","processedItems","map","i","id","sliceItems","render","pagination_Paginate","assign","Component","GET_BEST_STORIES","GET_TOP_STORIES","GET_NEW_STORIES","firebase","initializeApp","databaseURL","rootRef","database","ref","getStoryItem","type","child","once","then","IDlist","val","getItem","itemNumber","getUserData","userId","userData","timesAgo","unix","ms","minutes","Math","floor","hours","days","getTimeDifference","Date","getTime","getMsDifference","Card","by","descendants","score","time","title","href","pathname","timeOperations","IsFetching","isFetching","SingleItem","data","isLoading","fetch","prevprops","itemData","WaitingForData","story_Card","Stories","idList","hasError","updateStoryItems","category","error","info","types","getStory","pagination_Pagination","story_SingleItem","key","StoriesRouter","Switch","Route","exact","routes","story_Stories","component","User","created","karma","about","notFound","updateUser","name","userName","dangerouslySetInnerHTML","__html","Submissions","getData","ids","submitted","Promise","all","filter","toggleVisible","isVisible","onClick","document","getElementById","getElementsByClassName","countChildren","Children","CommentBody","text","kids","Comment_Children","kid","Comment_Comment","Comment","e","React","totalChildren","comments_Card","hidden","Comment_CommentBody","Comments","getComments","storyId","newKids","dataSnapshot","item","comments_Comment","UserComments","CategoryRouter","_ref2","Logo","Navigation","activeStyle","color","NavLink","Header","Header_Logo","Header_Navigation","FullStory","getItemData","api","comments_Comments","App","common_Header","Redirect","story_StoriesRouter","storyTypes","UserRouter","ReactDOM","HashRouter","basename","process","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50ebe4c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullStory\":\"comments_fullStory__2oyDf\",\"comments\":\"comments_comments__2ENcL\",\"comment\":\"comments_comment__10uPP\",\"commentBody\":\"comments_commentBody__3GQtv\",\"children\":\"comments_children__3SlK3\",\"card\":\"comments_card__318Iw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"card_root__1cdCV\",\"index\":\"card_index__2F8-v\",\"content\":\"card_content__1SOzr\",\"meta\":\"card_meta__1NTdZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__rmrdQ\",\"nav\":\"header_nav__1G1Uo\",\"logo\":\"header_logo__3bkjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__18mIH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"pagination_root__2nEVp\"};","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\n\r\nconst NotFound = props => {\r\n  return <div>The content you have been looking for is not found </div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../styles/pagination.module.css\"\r\n\r\n/**\r\n * Display More if previousPage is less, than zero\r\n * Link to currentPage/previousPage if clicked less\r\n * Link to currentPage/nextPage if clicked more\r\n */\r\n\r\nfunction Paginate({ currentPage, match }) {\r\n    let path = normalizePath(match);\r\n  \r\n    let nextPage = Number(currentPage) + 1;\r\n    let previousPage = Number(currentPage) - 1;\r\n    return (\r\n      <div className={styles.root}>\r\n        {previousPage < 0 ? (\r\n          \"\"\r\n        ) : (\r\n          <Link to={`${path}/page/${previousPage}`}><button>Previous</button></Link>\r\n        )}\r\n        <Link to={`${path}/page/${nextPage}`}><button>Next</button></Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Paginate\r\n\r\nfunction normalizePath(match) {\r\n    let path;\r\n    let isHomePage = match.path === \"/\"\r\n    console.log(\"Match from current Pagination: \", match)\r\n  \r\n  \r\n    if(!isHomePage) {\r\n     path = trimPageNumber(match.url)\r\n    } else {\r\n      path = getPath(match.path)\r\n    }\r\n  \r\n    if(path.lastIndexOf(\"/\") === path.length -1) {\r\n      path = path.slice(0, path.length - 2)\r\n    }\r\n    return path\r\n  }\r\n  \r\n  function getPath(path) {\r\n    let regex = /\\/:.*/gi;\r\n    return path.replace(regex, \"\");\r\n  }\r\n  \r\n  function trimPageNumber(url) {\r\n    let regex = /\\/page\\/.*/gi;\r\n    return url.replace(regex, \"\");\r\n  }\r\n  ","import React, { Component } from \"react\";\r\nimport Paginate from \"./Paginate\"\r\n/**\r\n * @param allData: [] All the data the component needs to paginate\r\n * @param perPage: Number. Items that will appear per page.\r\n * @param addIndex: boolean. Enumerate items into the pagination or not.\r\n */\r\n\r\nclass Pagination extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { items: [], currentPage: 0 };\r\n    this.handleChangePage = this.handleChangePage.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let currentPage = this.props.match.params.page || 0;\r\n    this.handleChangePage(currentPage);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let isPageChanged =\r\n      prevProps.match.params.page !== this.props.match.params.page;\r\n    let isDataChanged = prevProps.allData !== this.props.allData;\r\n    let isIndexingChanged = prevProps.addIndex !== this.props.addIndex;\r\n\r\n    console.log(prevProps, this.props)\r\n\r\n    if (isPageChanged || isDataChanged || isIndexingChanged) {\r\n      let currentPage = this.props.match.params.page || 0;\r\n      this.setState({ items: [], currentPage }, () =>\r\n        this.handleChangePage(currentPage, this.props.addIndex)\r\n      );\r\n    }\r\n  }\r\n\r\n  sliceItems(items, currentPage, perPage) {\r\n    let currentStart = perPage * currentPage;\r\n    return items.slice(currentStart, currentStart + perPage);\r\n  }\r\n\r\n  handleChangePage(currentPage, addIndex = true) {\r\n    let { allData, perPage } = this.props;\r\n    let processedItems = allData;\r\n    if (addIndex) {\r\n      processedItems = processedItems.map((i, index) => {\r\n        return { id: i, index };\r\n      });\r\n    }\r\n\r\n    let items = this.sliceItems(processedItems, currentPage, perPage);\r\n    this.setState({ items, currentPage });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.render(this.state.items)}\r\n        <Paginate currentPage={this.state.currentPage} {...this.props} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Pagination;\r\n","export const GET_BEST_STORIES = \"GET_BEST_STORIES\"\r\nexport const GET_TOP_STORIES = \"GET_TOP_STORIES\"\r\nexport const GET_NEW_STORIES = \"GET_NEW_STORIES\"\r\n","import firebase from \"firebase\";\r\nimport * as types from \"./operationTypes\";\r\n\r\n// Initialize Firebase\r\nconst firebaseConfig = {\r\n  databaseURL: \"https://hacker-news.firebaseio.com/\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// Create a reference with .ref() instead of new Firebase(url)\r\nconst rootRef = firebase.database().ref(\"v0\");\r\n\r\nfunction getStories(type) {\r\n  switch (type) {\r\n    case types.GET_BEST_STORIES:\r\n      return fetchStories(\"beststories\");\r\n    case types.GET_NEW_STORIES:\r\n      return fetchStories(\"newstories\");\r\n    case types.GET_TOP_STORIES:\r\n      return fetchStories(\"topstories\");\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction fetchStories(type) {\r\n  return rootRef\r\n    .child(type)\r\n    .once(\"value\")\r\n    .then(IDlist => {\r\n      let promises = [];\r\n      IDlist.val().forEach(id => promises.push(getItem(id)));\r\n      return Promise.all(promises);\r\n    });\r\n}\r\n\r\nfunction getStory(type) {\r\n  switch (type) {\r\n    case types.GET_BEST_STORIES:\r\n      return getStoryItem(\"beststories\");\r\n    case types.GET_NEW_STORIES:\r\n      return getStoryItem(\"newstories\");\r\n    case types.GET_TOP_STORIES:\r\n      return getStoryItem(\"topstories\");\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction getStoryItem(type) {\r\n  return rootRef\r\n    .child(type)\r\n    .once(\"value\")\r\n    .then(IDlist => {\r\n      return IDlist.val();\r\n    });\r\n}\r\n\r\nfunction getItem(itemNumber) {\r\n  let item = rootRef\r\n    .child(\"item\")\r\n    .child(itemNumber)\r\n    .once(\"value\");\r\n  return item;\r\n}\r\n\r\nfunction getItems(ids) {\r\n  return Promise.all(ids.map(id => getItem(id))).then(i => i.map(i => i.val()));\r\n}\r\n\r\nfunction getUserData(userId) {\r\n  let item = rootRef\r\n    .child(\"user\")\r\n    .child(userId)\r\n    .once(\"value\")\r\n    .then(userData => userData.val());\r\n  return item;\r\n}\r\n\r\n/**\r\n *\r\n * @param {Array} idList - Id list of all the possible data id's.\r\n * @param {String} type - string representation of a data type we want to get (i.e comment, submission)\r\n * @param {Number} start - starting index of the data. (starting from the n-th element found)\r\n * @param {Number} n - The amount of data we need to get.\r\n * @param {Boolean} addIndex - add indexation to the data?\r\n * @returns {id, index} ? {id}\r\n */\r\nfunction getDataRange(idList, type, start, n, addIndex = true) {\r\n  let _idList = [...idList];\r\n  let typeMatch = 0;\r\n\r\n  let dataList = [];\r\n\r\n  let needData = dataList.length <= n || _idList.length !== 0;\r\n  let isInRange = typeMatch > start && typeMatch < start + n;\r\n  let foundAllTheData = _idList.length <= 0 || n >= dataList.length;\r\n\r\n  // Get the data (_idList.shift())\r\n\r\n  // Check if matches type\r\n  // increment typeMatch if so\r\n\r\n  // Check if it is within the range.\r\n  // Push it into the data if so.\r\n\r\n  // HOW TO STOP THE WHILE LOOP\r\n  // 1: data.length >= n\r\n  // 2: _idList is empty\r\n\r\n  let previousPromise = [];\r\n\r\n  let currId = _idList.shift();\r\n\r\n  getItem(currId).then(data => {\r\n    if (data.type === type) {\r\n      typeMatch += 1;\r\n      if (isInRange) {\r\n        dataList.push(data);\r\n      }\r\n\r\n      if (foundAllTheData) {\r\n        return Promise.all(dataList);\r\n      }\r\n    }\r\n  });\r\n\r\n  // while (needData) {\r\n  //   let currId = _idList.shift();\r\n  //   getItem(currId).then(data => {\r\n  //     if (data.type === type) {\r\n  //       typeMatch += 1;\r\n  //       data.push(data.val());\r\n  //     } else {\r\n  //     }\r\n  //   });\r\n  // }\r\n}\r\n\r\nexport { getStories, getStory, getItem, getItems, getUserData, getDataRange };\r\n","export function getMsDifference(ms) {\r\n  let currentDate = new Date().getTime();\r\n  let newDate = new Date(ms);\r\n  let compare = currentDate - newDate;\r\n  return compare;\r\n}\r\n\r\nexport function getTimeDifference(ms) {\r\n  let minutes = Math.floor(ms / 1000 / 60);\r\n  let hours = Math.floor(minutes / 60);\r\n  let days = Math.floor(hours / 24);\r\n  if (minutes < 60) return `${minutes} minutes ago`;\r\n  else if (hours < 24) return `${hours} hours ago`;\r\n  else return `${days} days ago`;\r\n}\r\n\r\nexport function timesAgo(unix) {\r\n  let ms = unix * 1000;\r\n  let msDifference = getMsDifference(ms);\r\n  let timeDifference = getTimeDifference(msDifference);\r\n  return timeDifference;\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./card.module.css\";\r\n\r\nimport * as timeOperations from \"../services/timeOperations\";\r\n\r\nconst Card = props => {\r\n  let { by, descendants, id, score, time, title, url, index } = props;\r\n  return (\r\n    <div className={styles.root}>\r\n      {index !== undefined ? <div className={styles.index}>{index}.</div> : \"\" }\r\n      <div className={styles.content}>\r\n        <h3>\r\n          <a href={url}>{title}</a>\r\n        </h3>\r\n        <div className={styles.meta}>\r\n          {score} points | by <Link to={{ pathname: `/user/${by}` }}>{by}</Link>{\" \"}\r\n          {timeOperations.timesAgo(time)} |{\" \"}\r\n          <Link to={{ pathname: `/story/${id}` }}>{descendants} comments.</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, {Component} from \"react\"\r\n\r\nfunction IsFetching(props) {\r\n    let {isFetching} = props\r\n\r\n    if(isFetching) {\r\n        return \"Loading...\"\r\n    } else {\r\n        return props.children\r\n    }\r\n}\r\n\r\nexport default IsFetching","import React, { Component } from \"react\";\r\nimport Card from \"./Card\";\r\nimport { getItem } from \"../services/hackernewsapi\";\r\nimport WaitingForData from \"../common/WaitingForData\";\r\n\r\nclass SingleItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: undefined, isFetching: true };\r\n  }\r\n\r\n  fetch(id) {\r\n    getItem(id).then(data => {\r\n      this.setState({ data: data.val(), isFetching: false });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { id } = this.props;\r\n    this.setState({ isLoading: true }, this.fetch(id));\r\n  }\r\n\r\n  componentDidUpdate(prevprops) {\r\n    let { id } = this.props;\r\n    if(prevprops.id !== this.props.id) {\r\n      this.setState({ isLoading: true }, this.fetch(id));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let itemData = Object.assign({}, this.state.data, this.props)\r\n    return (\r\n      <WaitingForData isFetching={this.state.isFetching}>\r\n        <Card {...itemData}/>\r\n      </WaitingForData>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SingleItem;\r\n","import React, { Component } from \"react\";\r\nimport Pagination from \"../common/pagination/Pagination\";\r\nimport { getStory } from \"../services/hackernewsapi\";\r\nimport SingleItem from \"./SingleItem\";\r\n\r\nclass Stories extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      idList: [],\r\n      hasError: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateStoryItems(this.props.category);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.category !== this.props.category) {\r\n      this.setState(\r\n        { idList: [] },\r\n        this.updateStoryItems(this.props.category)\r\n      );\r\n    }\r\n\r\n    if (prevProps.match.path !== this.props.match.path) {\r\n      this.setState(\r\n        { idList: [] },\r\n        this.updateStoryItems(this.props.category)\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n    // You can also log the error to an error reporting service\r\n  }\r\n\r\n  updateStoryItems() {\r\n    let { category } = this.props;\r\n\r\n    getStory(category).then(idList => {\r\n      this.setState({ idList });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <div className=\"error\">Error occured!</div>;\r\n    }\r\n\r\n    return (\r\n        <Pagination\r\n          {...this.props}\r\n          allData={this.state.idList}\r\n          perPage={15}\r\n          addIndex={true}\r\n          render={items => {\r\n            return items.map((id, index) => {\r\n              return (\r\n                <div>\r\n                  <SingleItem key={index} id={id.id} index={id.index} />\r\n                </div>\r\n              );\r\n            });\r\n          }}\r\n        />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stories;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport NotFound from \"../common/NotFound\";\r\n\r\n\r\nimport Stories from \"./Stories\";\r\n\r\nconst StoriesRouter = ({ match, location, category }) => {\r\n\r\n  console.log(\"ROUTING...\", category, match.url, location)\r\n\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        exact\r\n        path={match.url}\r\n        render={routes => <Stories category={category} match={match} {...routes} />}\r\n      />\r\n      <Route\r\n        path={`${match.url}/page/:page`}\r\n        render={routes => <Stories category={category} match={match} {...routes}/>}\r\n      />\r\n       <Route component={NotFound} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default StoriesRouter;\r\n","import React, { Component } from \"react\";\r\nimport { getUserData } from \"../services/hackernewsapi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport WaitingForData from \"../common/WaitingForData\"\r\n\r\nclass User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: undefined,\r\n      created: undefined,\r\n      karma: undefined,\r\n      about: undefined,\r\n      notFound: undefined\r\n    };\r\n    this.updateUser(props.match.params.name);\r\n  }\r\n\r\n  updateUser(userName) {\r\n    if (!userName) return undefined;\r\n    getUserData(userName).then(data => {\r\n      if (!data) {\r\n        this.setState({ notFound: true });\r\n      } else {\r\n        this.setState({\r\n          id: data.id,\r\n          created: data.created,\r\n          karma: data.karma,\r\n          about: data.about,\r\n          notFound: undefined\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.notFound) {\r\n      let {name} = this.props.match.params\r\n      return <div>The user \"{name}\" is not found</div>;\r\n    }\r\n\r\n    return (\r\n      <WaitingForData isFetching={!this.state.id}>\r\n      <div className=\"user\">\r\n        <li>User: {this.state.id}</li>\r\n        <li>Created: {this.state.created} </li>\r\n        <li>Karma: {this.state.karma}</li>\r\n        {this.state.about ? (\r\n          <li>\r\n            About:{\" \"}\r\n            <div dangerouslySetInnerHTML={{ __html: this.state.about }} />{\" \"}\r\n          </li>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <li>\r\n          <Link to={{ pathname: `/user/submissions/${this.state.id}` }}>\r\n            Submissions\r\n          </Link>{\" \"}\r\n        </li>\r\n        <li>\r\n          <Link to={{ pathname: `/user/comments/${this.state.id}` }}>\r\n            Comments\r\n          </Link>{\" \"}\r\n        </li>\r\n      </div>\r\n      </WaitingForData>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport { getUserData, getItems } from \"../services/hackernewsapi\";\r\nimport Pagination from \"../common/pagination/Pagination\";\r\nimport WaitingForData from \"../common/WaitingForData\"\r\nimport Card from \"../story/Card\";\r\n\r\nclass Submissions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { items: [], isFetching: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n\r\n  getData() {\r\n    let type = \"story\";\r\n    let userName = this.props.match.params.userName;\r\n\r\n    getUserData(userName)\r\n      .then(userData => {\r\n        let { submitted } = userData;\r\n        return getItems(submitted);\r\n      })\r\n      .then(all => {\r\n        let items = all.filter(i => i.type === type);\r\n        this.setState({ items, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <WaitingForData isFetching={this.state.isFetching}>\r\n        <Pagination\r\n          {...this.props}\r\n          allData={this.state.items}\r\n          perPage={25}\r\n          addIndex={true}\r\n          render={items => {\r\n            return items.map(itemData => <Card {...itemData.id} index={itemData.index} />);\r\n          }}\r\n        />\r\n        </WaitingForData>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Submissions;\r\n","import React from \"react\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport * as timeOperations from \"../services/timeOperations\";\r\nimport styles from \"./comments.module.css\"\r\n\r\nfunction Card({ id, by, time, toggleVisible, isVisible }) {\r\n  return (\r\n      <div className={styles.card}>\r\n       by  <Link to={{pathname: `/user/${by}`}}>{by}</Link> | {timeOperations.timesAgo(time)} |<button onClick={toggleVisible}>{isVisible ? \"Hide\" : `Show ${countChildren(id)}`}</button>\r\n      </div>\r\n  );\r\n}\r\n\r\nfunction countChildren(id) {\r\n    let currentComment = document.getElementById(id)\r\n    let totalChildren = currentComment.getElementsByClassName(\"commentText\").length\r\n    return totalChildren\r\n}\r\nexport default Card;","import React, { Component } from \"react\";\r\nimport Comments from \"./Comments\";\r\nimport Card from \"./Card\";\r\nimport { getItem } from \"../services/hackernewsapi\";\r\nimport WaitingForData from \"../common/WaitingForData\";\r\nimport styles from \"./comments.module.css\";\r\n\r\nconst Children = props => {\r\n  return <div className={styles.children}>{props.children}</div>;\r\n};\r\n\r\nconst CommentBody = ({ text, kids }) => {\r\n  return (\r\n    <div className={`${styles.commentBody} commentText`}>\r\n      <div dangerouslySetInnerHTML={{ __html: text }} />\r\n      <Children>\r\n        {kids\r\n          ? kids.map((kid, index) => {\r\n              return <Comment key={index} id={kid} />;\r\n            })\r\n          : \"\"}\r\n      </Children>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass Comment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: undefined,\r\n      isFetching: true,\r\n      isVisible: true\r\n    };\r\n\r\n    this.toggleVisible = this.toggleVisible.bind(this);\r\n    this.countChildren = this.countChildren.bind(this);\r\n  }\r\n\r\n  fetch(id) {\r\n    getItem(id).then(data => {\r\n      this.setState({ data: data.val(), isFetching: false });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { id } = this.props;\r\n    this.setState({ isLoading: true }, this.fetch(id));\r\n  }\r\n\r\n  toggleVisible(e) {\r\n    this.setState({ isVisible: !this.state.isVisible });\r\n    this.countChildren();\r\n  }\r\n\r\n  countChildren() {\r\n    console.log(\"Counting children...\", React.Children, this.props.children);\r\n    let currentComment = document.getElementById(this.props.id)\r\n    let totalChildren = currentComment.getElementsByClassName(\"commentText\").length\r\n    console.log(totalChildren)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`${styles.comment}`} id={this.props.id}>\r\n        <WaitingForData isFetching={this.state.isFetching}>\r\n          <Card\r\n            {...this.state.data}\r\n            toggleVisible={this.toggleVisible}\r\n            isVisible={this.state.isVisible}\r\n            countChildren={this.countChildren}\r\n          />\r\n          <div hidden={!this.state.isVisible}>\r\n            <CommentBody {...this.state.data} />\r\n          </div>\r\n        </WaitingForData>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comment;\r\n","import React, { Component } from \"react\";\r\nimport Comment from \"./Comment\";\r\nimport { getItem } from \"../services/hackernewsapi\";\r\nimport styles from \"./comments.module.css\";\r\n\r\n/*\r\nTODO 1: Refactor getComments() function, it now takes StoryId and kids props. \r\n        I am considering to separate story fetching functionality from this component.\r\n*/\r\n\r\nclass Comments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { kids: [], notFound: false };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getComments(this.props.storyId, this.props.newKids);\r\n  }\r\n\r\n  // If StoryID is received, update from StoryId.\r\n  getComments(storyId) {\r\n    if (storyId) {\r\n      getItem(storyId).then(dataSnapshot => {\r\n        let item = dataSnapshot.val();\r\n        let kids;\r\n        if (item) {\r\n          kids = item.kids || [];\r\n          this.setState({ kids });\r\n        } else this.setState({ notFound: true });\r\n      });\r\n    } else {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className={styles.comments}>\r\n        {this.state.notFound\r\n          ? \"\"\r\n          : this.state.kids.map((kid, index) => (\r\n              <Comment key={index} id={kid} />\r\n            ))}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comments;\r\n","import React, {Component} from \"react\"\r\nimport Comments from \"../comments/Comments\"\r\n\r\nclass UserComments extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return(<div>Here will be user comments!</div>)\r\n    }\r\n}\r\n\r\nexport default UserComments","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport User from \"./User\";\r\nimport Submissions from \"./Submissions\";\r\nimport Comments from \"./Comments\";\r\nimport NotFound from \"../common/NotFound\";\r\n\r\nconst CategoryRouter = ({ match }) => {\r\n  console.log(\"Match\", match);\r\n\r\n  switch (match.params.category) {\r\n    case \"submissions\": {\r\n      console.log(\"Matched Submissions!\");\r\n      return (\r\n        <Switch>\r\n          <Route\r\n            exact path={`/user/:submissions/:userName/`}\r\n            component={Submissions}\r\n          />\r\n          <Route\r\n            exact path={`/user/:submissions/:userName/page/:page`}\r\n            component={Submissions}\r\n          />\r\n        </Switch>\r\n      );\r\n    }\r\n    case \"comments\": {\r\n      console.log(\"Matched Comments!\");\r\n      return (\r\n        <Switch>\r\n          <Route\r\n            exact path={`/user/:comments/:userName/`}\r\n            component={Comments}\r\n          />\r\n           <Route\r\n            exact path={`/user/:comments/:userName/page/:page`}\r\n            component={Comments}\r\n          />\r\n        </Switch>\r\n      );\r\n    }\r\n    default: {\r\n      console.log(\"Did not match!\");\r\n\r\n      return <Route component={NotFound} />;\r\n    }\r\n  }\r\n};\r\n\r\nconst StoriesRouter = ({ match, location, category }) => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        exact\r\n        path={`/user/:name`}\r\n        component={User}\r\n      />\r\n      <Route\r\n        exact\r\n        path={`/user/:category/:userName`}\r\n        component={CategoryRouter}\r\n      />\r\n      <Route\r\n        exact\r\n        path={`/user/:category/:userName/page/:page`}\r\n        component={CategoryRouter}\r\n      />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default StoriesRouter;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./styles/header.module.css\";\r\n\r\nconst Logo = props => {\r\n  return <div className={styles.logo}>Hacker News</div>;\r\n};\r\n\r\nconst Navigation = props => {\r\n  const activeStyle = { color: \"red\" };\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <NavLink to={`/top`} activeStyle={activeStyle}>\r\n        Home\r\n      </NavLink>\r\n      {\" | \"}\r\n      <NavLink to={`/best`} activeStyle={activeStyle}>\r\n        Best\r\n      </NavLink>\r\n      {\" | \"}\r\n      <NavLink to={`/new`} activeStyle={activeStyle}>\r\n        New\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className={styles.header}>\r\n      <Logo />\r\n      <Navigation />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"../story/Card\";\r\nimport Comments from \"./Comments\"\r\nimport * as api from \"../services/hackernewsapi\";\r\nimport WaitingForData from \"../common/WaitingForData\"\r\nimport styles from \"./comments.module.css\"\r\n\r\nclass FullStory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      itemData: {},\r\n      comments: [],\r\n      hasError: false,\r\n      notFound: false,\r\n      isFetching: true\r\n    };\r\n    \r\n    this.getItemData(props.match.params.id);\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n    // You can also log the error to an error reporting service\r\n  }\r\n\r\n\r\n  getItemData(id) {\r\n    let itemData = api.getItem(id);\r\n    itemData.then(i => {\r\n      let itemData = i.val();\r\n      if(itemData) this.setState({ itemData, isFetching: false });\r\n      else this.setState({notFound: true})\r\n      \r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(this.state.hasError) {\r\n      return <div className=\"error\">Error occured!</div>\r\n    }\r\n    if(this.state.notFound) {\r\n      return <div className={styles.fullStory}>We could not find the following item.</div>\r\n    }\r\n\r\n    return (\r\n      <div className={styles.fullStory}>\r\n      <WaitingForData isFetching={this.state.isFetching}>\r\n        <Card {...this.state.itemData}/>\r\n        <Comments storyId={this.props.match.params.id} />\r\n        </WaitingForData>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FullStory;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect, BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport styles from \"./app.module.css\";\r\nimport StoriesRouter from \"./story/StoriesRouter\";\r\nimport UserRouter from \"./user/Router\";\r\nimport Header from \"./common/Header\";\r\nimport FullStory from \"./comments/FullStory\";\r\nimport NotFound from \"./common/NotFound\";\r\n\r\nimport * as storyTypes from \"./services/operationTypes\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <div>\r\n        <div className={styles.container}>\r\n          <Header />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={`/`}\r\n              render={() => {\r\n                return <Redirect to={`/top`} />;\r\n              }}\r\n            />\r\n\r\n            <Route\r\n              path={`/top`}\r\n              render={props => (\r\n                <StoriesRouter\r\n                  {...props}\r\n                  category={storyTypes.GET_TOP_STORIES}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Route\r\n              path={`/best`}\r\n              render={props => (\r\n                <StoriesRouter\r\n                  {...props}\r\n                  category={storyTypes.GET_BEST_STORIES}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path={`/new`}\r\n              render={props => (\r\n                <StoriesRouter\r\n                  {...props}\r\n                  category={storyTypes.GET_NEW_STORIES}\r\n                />\r\n              )}\r\n            />\r\n            <Route exact path={`/story/:id`} component={FullStory} />\r\n            <Route path={`/user/:name`} component={UserRouter} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Root from \"./Root\"\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","import React from \"react\";\r\nimport App from \"./App\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route\r\n} from 'react-router-dom'\r\n\r\nexport default function Root(props) {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Route path=\"/\" component={App} />\r\n    </Router>\r\n  );\r\n}\r\n"],"sourceRoot":""}
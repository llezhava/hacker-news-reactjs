{"version":3,"sources":["comments/comments.module.css","story/card.module.css","common/styles/header.module.css","app.module.css","common/styles/pagination.module.css","serviceWorker.js","common/pagination/Paginate.js","common/pagination/Pagination.js","services/operationTypes.js","services/hackernewsapi.js","services/timeOperations.js","story/Card.js","common/WaitingForData.js","story/SingleItem.js","story/Stories.js","story/StoriesRouter.js","user/Submissions.js","user/User.js","comments/Card.js","comments/Comment.js","comments/Comments.js","user/Comments.js","common/NotFound.js","user/Router.js","common/Header.js","comments/FullStory.js","App.js","index.js","Root.js"],"names":["module","exports","fullStory","comments","comment","commentBody","children","card","root","index","content","meta","header","nav","logo","container","Boolean","window","location","hostname","match","Paginate","_ref","currentPage","path","url","isHomePage","console","log","replace","getPath","lastIndexOf","length","slice","normalizePath","nextPage","Number","previousPage","react_default","a","createElement","className","styles","Link","to","concat","Pagination","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","items","handleChangePage","bind","assertThisInitialized","params","page","prevProps","_this2","isPageChanged","isDataChanged","allData","isIndexingChanged","addIndex","setState","perPage","currentStart","arguments","undefined","_this$props","processedItems","map","i","id","sliceItems","render","pagination_Paginate","assign","Component","GET_BEST_STORIES","GET_TOP_STORIES","GET_NEW_STORIES","firebase","initializeApp","databaseURL","rootRef","database","ref","getStoryItem","type","child","once","then","IDlist","val","getItem","itemNumber","getUserData","userId","userData","timesAgo","unix","ms","minutes","Math","floor","hours","days","getTimeDifference","Date","getTime","getMsDifference","Card","by","descendants","score","time","title","href","pathname","timeOperations","IsFetching","isFetching","SingleItem","data","isLoading","fetch","prevprops","itemData","WaitingForData","story_Card","Stories","idList","hasError","updateStoryItems","category","error","info","types","getStory","pagination_Pagination","story_SingleItem","key","StoriesRouter","Switch","Route","exact","routes","story_Stories","Submissions","getData","userName","ids","submitted","Promise","all","filter","User","created","karma","about","updateUser","name","dangerouslySetInnerHTML","__html","process","toggleVisible","isVisible","onClick","document","getElementById","getElementsByClassName","countChildren","Children","CommentBody","text","kids","Comment_Children","kid","Comment_Comment","Comment","e","React","totalChildren","comments_Card","hidden","Comment_CommentBody","Comments","notFound","getComments","storyId","newKids","dataSnapshot","item","comments_Comment","UserComments","NotFound","CategoryRouter","component","_ref2","Logo","Navigation","activeStyle","color","NavLink","Header","Header_Logo","Header_Navigation","FullStory","getItemData","api","comments_Comments","App","common_Header","Redirect","story_StoriesRouter","storyTypes","UserRouter","ReactDOM","BrowserRouter","basename","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.011bf88e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullStory\":\"comments_fullStory__2oyDf\",\"comments\":\"comments_comments__2ENcL\",\"comment\":\"comments_comment__10uPP\",\"commentBody\":\"comments_commentBody__3GQtv\",\"children\":\"comments_children__3SlK3\",\"card\":\"comments_card__318Iw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"card_root__1cdCV\",\"index\":\"card_index__2F8-v\",\"content\":\"card_content__1SOzr\",\"meta\":\"card_meta__1NTdZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__rmrdQ\",\"nav\":\"header_nav__1G1Uo\",\"logo\":\"header_logo__3bkjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__18mIH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"pagination_root__2nEVp\"};","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../styles/pagination.module.css\"\r\n\r\n/**\r\n * Display More if previousPage is less, than zero\r\n * Link to currentPage/previousPage if clicked less\r\n * Link to currentPage/nextPage if clicked more\r\n */\r\n\r\nfunction Paginate({ currentPage, match }) {\r\n    let path = normalizePath(match);\r\n  \r\n    let nextPage = Number(currentPage) + 1;\r\n    let previousPage = Number(currentPage) - 1;\r\n    return (\r\n      <div className={styles.root}>\r\n        {previousPage < 0 ? (\r\n          \"\"\r\n        ) : (\r\n          <Link to={`${path}/page/${previousPage}`}><button>Previous</button></Link>\r\n        )}\r\n        <Link to={`${path}/page/${nextPage}`}><button>Next</button></Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Paginate\r\n\r\nfunction normalizePath(match) {\r\n    let path;\r\n    let isHomePage = match.path === \"/\"\r\n    console.log(\"Match from current Pagination: \", match)\r\n  \r\n  \r\n    if(!isHomePage) {\r\n     path = trimPageNumber(match.url)\r\n    } else {\r\n      path = getPath(match.path)\r\n    }\r\n  \r\n    if(path.lastIndexOf(\"/\") === path.length -1) {\r\n      path = path.slice(0, path.length - 2)\r\n    }\r\n    return path\r\n  }\r\n  \r\n  function getPath(path) {\r\n    let regex = /\\/:.*/gi;\r\n    return path.replace(regex, \"\");\r\n  }\r\n  \r\n  function trimPageNumber(url) {\r\n    let regex = /\\/page\\/.*/gi;\r\n    return url.replace(regex, \"\");\r\n  }\r\n  ","import React, { Component } from \"react\";\r\nimport Paginate from \"./Paginate\"\r\n/**\r\n * @param allData: [] All the data the component needs to paginate\r\n * @param perPage: Number. Items that will appear per page.\r\n * @param addIndex: boolean. Enumerate items into the pagination or not.\r\n */\r\n\r\nclass Pagination extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { items: [], currentPage: 0 };\r\n    this.handleChangePage = this.handleChangePage.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let currentPage = this.props.match.params.page || 0;\r\n    this.handleChangePage(currentPage);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let isPageChanged =\r\n      prevProps.match.params.page !== this.props.match.params.page;\r\n    let isDataChanged = prevProps.allData !== this.props.allData;\r\n    let isIndexingChanged = prevProps.addIndex !== this.props.addIndex;\r\n\r\n    console.log(prevProps, this.props)\r\n\r\n    if (isPageChanged || isDataChanged || isIndexingChanged) {\r\n      let currentPage = this.props.match.params.page || 0;\r\n      this.setState({ items: [], currentPage }, () =>\r\n        this.handleChangePage(currentPage, this.props.addIndex)\r\n      );\r\n    }\r\n  }\r\n\r\n  sliceItems(items, currentPage, perPage) {\r\n    let currentStart = perPage * currentPage;\r\n    return items.slice(currentStart, currentStart + perPage);\r\n  }\r\n\r\n  handleChangePage(currentPage, addIndex = true) {\r\n    let { allData, perPage } = this.props;\r\n    let processedItems = allData;\r\n    if (addIndex) {\r\n      processedItems = processedItems.map((i, index) => {\r\n        return { id: i, index };\r\n      });\r\n    }\r\n\r\n    let items = this.sliceItems(processedItems, currentPage, perPage);\r\n    this.setState({ items, currentPage });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.render(this.state.items)}\r\n        <Paginate currentPage={this.state.currentPage} {...this.props} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Pagination;\r\n","export const GET_BEST_STORIES = \"GET_BEST_STORIES\"\r\nexport const GET_TOP_STORIES = \"GET_TOP_STORIES\"\r\nexport const GET_NEW_STORIES = \"GET_NEW_STORIES\"\r\n","import firebase from \"firebase\";\r\nimport * as types from \"./operationTypes\";\r\n\r\n// Initialize Firebase\r\nconst firebaseConfig = {\r\n  databaseURL: \"https://hacker-news.firebaseio.com/\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// Create a reference with .ref() instead of new Firebase(url)\r\nconst rootRef = firebase.database().ref(\"v0\");\r\n\r\nfunction getStories(type) {\r\n  switch (type) {\r\n    case types.GET_BEST_STORIES:\r\n      return fetchStories(\"beststories\");\r\n    case types.GET_NEW_STORIES:\r\n      return fetchStories(\"newstories\");\r\n    case types.GET_TOP_STORIES:\r\n      return fetchStories(\"topstories\");\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction fetchStories(type) {\r\n  return rootRef\r\n    .child(type)\r\n    .once(\"value\")\r\n    .then(IDlist => {\r\n      let promises = [];\r\n      IDlist.val().forEach(id => promises.push(getItem(id)));\r\n      return Promise.all(promises);\r\n    });\r\n}\r\n\r\nfunction getStory(type) {\r\n  switch (type) {\r\n    case types.GET_BEST_STORIES:\r\n      return getStoryItem(\"beststories\");\r\n    case types.GET_NEW_STORIES:\r\n      return getStoryItem(\"newstories\");\r\n    case types.GET_TOP_STORIES:\r\n      return getStoryItem(\"topstories\");\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction getStoryItem(type) {\r\n  return rootRef\r\n    .child(type)\r\n    .once(\"value\")\r\n    .then(IDlist => {\r\n      return IDlist.val();\r\n    });\r\n}\r\n\r\nfunction getItem(itemNumber) {\r\n  let item = rootRef\r\n    .child(\"item\")\r\n    .child(itemNumber)\r\n    .once(\"value\");\r\n  return item;\r\n}\r\n\r\nfunction getItems(ids) {\r\n  return Promise.all(ids.map(id => getItem(id))).then(i => i.map(i => i.val()));\r\n}\r\n\r\nfunction getUserData(userId) {\r\n  let item = rootRef\r\n    .child(\"user\")\r\n    .child(userId)\r\n    .once(\"value\")\r\n    .then(userData => userData.val());\r\n  return item;\r\n}\r\n\r\n/**\r\n *\r\n * @param {Array} idList - Id list of all the possible data id's.\r\n * @param {String} type - string representation of a data type we want to get (i.e comment, submission)\r\n * @param {Number} start - starting index of the data. (starting from the n-th element found)\r\n * @param {Number} n - The amount of data we need to get.\r\n * @param {Boolean} addIndex - add indexation to the data?\r\n * @returns {id, index} ? {id}\r\n */\r\nfunction getDataRange(idList, type, start, n, addIndex = true) {\r\n  let _idList = [...idList];\r\n  let typeMatch = 0;\r\n\r\n  let dataList = [];\r\n\r\n  let needData = dataList.length <= n || _idList.length !== 0;\r\n  let isInRange = typeMatch > start && typeMatch < start + n;\r\n  let foundAllTheData = _idList.length <= 0 || n >= dataList.length;\r\n\r\n  // Get the data (_idList.shift())\r\n\r\n  // Check if matches type\r\n  // increment typeMatch if so\r\n\r\n  // Check if it is within the range.\r\n  // Push it into the data if so.\r\n\r\n  // HOW TO STOP THE WHILE LOOP\r\n  // 1: data.length >= n\r\n  // 2: _idList is empty\r\n\r\n  let previousPromise = [];\r\n\r\n  let currId = _idList.shift();\r\n\r\n  getItem(currId).then(data => {\r\n    if (data.type === type) {\r\n      typeMatch += 1;\r\n      if (isInRange) {\r\n        dataList.push(data);\r\n      }\r\n\r\n      if (foundAllTheData) {\r\n        return Promise.all(dataList);\r\n      }\r\n    }\r\n  });\r\n\r\n  // while (needData) {\r\n  //   let currId = _idList.shift();\r\n  //   getItem(currId).then(data => {\r\n  //     if (data.type === type) {\r\n  //       typeMatch += 1;\r\n  //       data.push(data.val());\r\n  //     } else {\r\n  //     }\r\n  //   });\r\n  // }\r\n}\r\n\r\nexport { getStories, getStory, getItem, getItems, getUserData, getDataRange };\r\n","export function getMsDifference(ms) {\r\n  let currentDate = new Date().getTime();\r\n  let newDate = new Date(ms);\r\n  let compare = currentDate - newDate;\r\n  return compare;\r\n}\r\n\r\nexport function getTimeDifference(ms) {\r\n  let minutes = Math.floor(ms / 1000 / 60);\r\n  let hours = Math.floor(minutes / 60);\r\n  let days = Math.floor(hours / 24);\r\n  if (minutes < 60) return `${minutes} minutes ago`;\r\n  else if (hours < 24) return `${hours} hours ago`;\r\n  else return `${days} days ago`;\r\n}\r\n\r\nexport function timesAgo(unix) {\r\n  let ms = unix * 1000;\r\n  let msDifference = getMsDifference(ms);\r\n  let timeDifference = getTimeDifference(msDifference);\r\n  return timeDifference;\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./card.module.css\";\r\n\r\nimport * as timeOperations from \"../services/timeOperations\";\r\n\r\nconst Card = props => {\r\n  let { by, descendants, id, score, time, title, url, index } = props;\r\n  return (\r\n    <div className={styles.root}>\r\n      {index !== undefined ? <div className={styles.index}>{index}.</div> : \"\" }\r\n      <div className={styles.content}>\r\n        <h3>\r\n          <a href={url}>{title}</a>\r\n        </h3>\r\n        <div className={styles.meta}>\r\n          {score} points | by <Link to={{ pathname: `/user/${by}` }}>{by}</Link>{\" \"}\r\n          {timeOperations.timesAgo(time)} |{\" \"}\r\n          <Link to={{ pathname: `/story/${id}` }}>{descendants} comments.</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, {Component} from \"react\"\r\n\r\nfunction IsFetching(props) {\r\n    let {isFetching} = props\r\n\r\n    if(isFetching) {\r\n        return \"Loading...\"\r\n    } else {\r\n        return props.children\r\n    }\r\n}\r\n\r\nexport default IsFetching","import React, { Component } from \"react\";\r\nimport Card from \"./Card\";\r\nimport { getItem } from \"../services/hackernewsapi\";\r\nimport WaitingForData from \"../common/WaitingForData\";\r\n\r\nclass SingleItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: undefined, isFetching: true };\r\n  }\r\n\r\n  fetch(id) {\r\n    getItem(id).then(data => {\r\n      this.setState({ data: data.val(), isFetching: false });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { id } = this.props;\r\n    this.setState({ isLoading: true }, this.fetch(id));\r\n  }\r\n\r\n  componentDidUpdate(prevprops) {\r\n    let { id } = this.props;\r\n    if(prevprops.id !== this.props.id) {\r\n      this.setState({ isLoading: true }, this.fetch(id));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let itemData = Object.assign({}, this.state.data, this.props)\r\n    return (\r\n      <WaitingForData isFetching={this.state.isFetching}>\r\n        <Card {...itemData}/>\r\n      </WaitingForData>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SingleItem;\r\n","import React, { Component } from \"react\";\r\nimport Pagination from \"../common/pagination/Pagination\";\r\nimport { getStory } from \"../services/hackernewsapi\";\r\nimport SingleItem from \"./SingleItem\";\r\n\r\nclass Stories extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      idList: [],\r\n      hasError: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateStoryItems(this.props.category);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.category !== this.props.category) {\r\n      this.setState(\r\n        { idList: [] },\r\n        this.updateStoryItems(this.props.category)\r\n      );\r\n    }\r\n\r\n    if (prevProps.match.path !== this.props.match.path) {\r\n      this.setState(\r\n        { idList: [] },\r\n        this.updateStoryItems(this.props.category)\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n    // You can also log the error to an error reporting service\r\n  }\r\n\r\n  updateStoryItems() {\r\n    let { category } = this.props;\r\n\r\n    getStory(category).then(idList => {\r\n      this.setState({ idList });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <div className=\"error\">Error occured!</div>;\r\n    }\r\n\r\n    return (\r\n        <Pagination\r\n          {...this.props}\r\n          allData={this.state.idList}\r\n          perPage={15}\r\n          addIndex={true}\r\n          render={items => {\r\n            return items.map((id, index) => {\r\n              return (\r\n                <div>\r\n                  <SingleItem key={index} id={id.id} index={id.index} />\r\n                </div>\r\n              );\r\n            });\r\n          }}\r\n        />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stories;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Stories from \"./Stories\";\r\n\r\nconst StoriesRouter = ({ match, location, category }) => {\r\n\r\n  console.log(\"ROUTING...\", category, match.url, location)\r\n\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        exact\r\n        path={match.url}\r\n        render={routes => <Stories category={category} match={match} {...routes} />}\r\n      />\r\n      <Route\r\n        path={`${match.url}/page/:page`}\r\n        render={routes => <Stories category={category} match={match} {...routes}/>}\r\n      />\r\n    </Switch>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default StoriesRouter;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport { getUserData, getItems } from \"../services/hackernewsapi\";\r\nimport Pagination from \"../common/pagination/Pagination\";\r\nimport WaitingForData from \"../common/WaitingForData\"\r\nimport Card from \"../story/Card\";\r\n\r\nclass Submissions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { items: [], isFetching: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n\r\n  getData() {\r\n    let type = \"story\";\r\ndebugger\r\n    let userName = this.props.match.params.userName;\r\n\r\n    getUserData(userName)\r\n      .then(userData => {\r\n        let { submitted } = userData;\r\n        return getItems(submitted);\r\n      })\r\n      .then(all => {\r\n        let items = all.filter(i => i.type === type);\r\n        this.setState({ items, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <WaitingForData isFetching={this.state.isFetching}>\r\n        <Pagination\r\n          {...this.props}\r\n          allData={this.state.items}\r\n          perPage={25}\r\n          addIndex={true}\r\n          render={items => {\r\n            return items.map(itemData => <Card {...itemData.id} index={itemData.index} />);\r\n          }}\r\n        />\r\n        </WaitingForData>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Submissions;\r\n","import React, { Component } from \"react\";\r\nimport { getUserData } from \"../services/hackernewsapi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Submissions from \"./Submissions\";\r\n\r\nconst User1 = (props) => {\r\n  return(<div> Under Reconstruction... </div>)\r\n}\r\n\r\nclass User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { id: \"\", created: \"\", karma: \"\", about: undefined };\r\n    this.updateUser(props.match.params.name);\r\n  }\r\n\r\n  updateUser(userName) {\r\n    if (!userName) return undefined;\r\n    getUserData(userName).then(data => {\r\n      console.log(data);\r\n      this.setState({\r\n        id: data.id,\r\n        created: data.created,\r\n        karma: data.karma,\r\n        about: data.about\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"user\">\r\n        <li>User: {this.state.id}</li>\r\n        <li>Created: {this.state.created} </li>\r\n        <li>Karma: {this.state.karma}</li>\r\n        {this.state.about ? (\r\n          <li>\r\n            About:{\" \"}\r\n            <div dangerouslySetInnerHTML={{ __html: this.state.about }} />{\" \"}\r\n          </li>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <li><Link to={{pathname: `${process.env.PUBLIC_URL}/user/submissions/${this.state.id}`}}>Submissions</Link> </li>\r\n        <li><Link to={{pathname: `${process.env.PUBLIC_URL}/user/comments/${this.state.id}`}}>Comments</Link> </li>\r\n      </div>\r\n    );\r\n    \r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport * as timeOperations from \"../services/timeOperations\";\r\nimport styles from \"./comments.module.css\"\r\n\r\nfunction Card({ id, by, time, toggleVisible, isVisible }) {\r\n  return (\r\n      <div className={styles.card}>\r\n       by  <Link to={{pathname: `/user/${by}`}}>{by}</Link> | {timeOperations.timesAgo(time)} |<button onClick={toggleVisible}>{isVisible ? \"Hide\" : `Show ${countChildren(id)}`}</button>\r\n      </div>\r\n  );\r\n}\r\n\r\nfunction countChildren(id) {\r\n    let currentComment = document.getElementById(id)\r\n    let totalChildren = currentComment.getElementsByClassName(\"commentText\").length\r\n    return totalChildren\r\n}\r\nexport default Card;","import React, { Component } from \"react\";\r\nimport Comments from \"./Comments\";\r\nimport Card from \"./Card\";\r\nimport { getItem } from \"../services/hackernewsapi\";\r\nimport WaitingForData from \"../common/WaitingForData\";\r\nimport styles from \"./comments.module.css\";\r\n\r\nconst Children = props => {\r\n  return <div className={styles.children}>{props.children}</div>;\r\n};\r\n\r\nconst CommentBody = ({ text, kids }) => {\r\n  return (\r\n    <div className={`${styles.commentBody} commentText`}>\r\n      <div dangerouslySetInnerHTML={{ __html: text }} />\r\n      <Children>\r\n        {kids\r\n          ? kids.map((kid, index) => {\r\n              return <Comment key={index} id={kid} />;\r\n            })\r\n          : \"\"}\r\n      </Children>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass Comment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: undefined,\r\n      isFetching: true,\r\n      isVisible: true\r\n    };\r\n\r\n    this.toggleVisible = this.toggleVisible.bind(this);\r\n    this.countChildren = this.countChildren.bind(this);\r\n  }\r\n\r\n  fetch(id) {\r\n    getItem(id).then(data => {\r\n      this.setState({ data: data.val(), isFetching: false });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { id } = this.props;\r\n    this.setState({ isLoading: true }, this.fetch(id));\r\n  }\r\n\r\n  toggleVisible(e) {\r\n    this.setState({ isVisible: !this.state.isVisible });\r\n    this.countChildren();\r\n  }\r\n\r\n  countChildren() {\r\n    console.log(\"Counting children...\", React.Children, this.props.children);\r\n    let currentComment = document.getElementById(this.props.id)\r\n    let totalChildren = currentComment.getElementsByClassName(\"commentText\").length\r\n    console.log(totalChildren)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`${styles.comment}`} id={this.props.id}>\r\n        <WaitingForData isFetching={this.state.isFetching}>\r\n          <Card\r\n            {...this.state.data}\r\n            toggleVisible={this.toggleVisible}\r\n            isVisible={this.state.isVisible}\r\n            countChildren={this.countChildren}\r\n          />\r\n          <div hidden={!this.state.isVisible}>\r\n            <CommentBody {...this.state.data} />\r\n          </div>\r\n        </WaitingForData>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comment;\r\n","import React, { Component } from \"react\";\r\nimport Comment from \"./Comment\";\r\nimport { getItem } from \"../services/hackernewsapi\";\r\nimport styles from \"./comments.module.css\";\r\n\r\n/*\r\nTODO 1: Refactor getComments() function, it now takes StoryId and kids props. \r\n        I am considering to separate story fetching functionality from this component.\r\n*/\r\n\r\nclass Comments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { kids: [], notFound: false };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getComments(this.props.storyId, this.props.newKids);\r\n  }\r\n\r\n  // If StoryID is received, update from StoryId.\r\n  getComments(storyId) {\r\n    if (storyId) {\r\n      getItem(storyId).then(dataSnapshot => {\r\n        let item = dataSnapshot.val();\r\n        let kids;\r\n        if (item) {\r\n          kids = item.kids || [];\r\n          this.setState({ kids });\r\n        } else this.setState({ notFound: true });\r\n      });\r\n    } else {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className={styles.comments}>\r\n        {this.state.notFound\r\n          ? \"\"\r\n          : this.state.kids.map((kid, index) => (\r\n              <Comment key={index} id={kid} />\r\n            ))}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comments;\r\n","import React, {Component} from \"react\"\r\nimport Comments from \"../comments/Comments\"\r\n\r\nclass UserComments extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return(<div>Here will be user comments!</div>)\r\n    }\r\n}\r\n\r\nexport default UserComments","import React from \"react\";\r\n\r\nconst NotFound = props => {\r\n  console.log(\"Logging from not found\");\r\n  return <div>The content you have been looking for is not found </div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport User from \"./User\";\r\nimport Submissions from \"./Submissions\";\r\nimport Comments from \"./Comments\";\r\nimport NotFound from \"../common/NotFound\";\r\n\r\nconst CategoryRouter = ({ match }) => {\r\n  console.log(\"Match\", match);\r\n\r\n  switch (match.params.category) {\r\n    case \"submissions\": {\r\n      console.log(\"Matched Submissions!\");\r\n      return (\r\n        <Switch>\r\n          <Route\r\n            exact path={`/user/:submissions/:userName/`}\r\n            component={Submissions}\r\n          />\r\n          <Route\r\n            exact path={`/user/:submissions/:userName/page/:page`}\r\n            component={Submissions}\r\n          />\r\n        </Switch>\r\n      );\r\n    }\r\n    case \"comments\": {\r\n      console.log(\"Matched Comments!\");\r\n      return (\r\n        <Switch>\r\n          <Route\r\n            exact path={`/user/:comments/:userName/`}\r\n            component={Comments}\r\n          />\r\n           <Route\r\n            exact path={`/user/:comments/:userName/page/:page`}\r\n            component={Comments}\r\n          />\r\n        </Switch>\r\n      );\r\n    }\r\n    default: {\r\n      console.log(\"Did not match!\");\r\n\r\n      return <Route component={NotFound} />;\r\n    }\r\n  }\r\n};\r\n\r\nconst StoriesRouter = ({ match, location, category }) => {\r\n  // console.log(\"Match\", match);\r\n  // console.log(\"Location\",location)\r\n\r\n  // console.log(\"ROUTING...\", category)\r\n\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        exact\r\n        path={`${process.env.PUBLIC_URL}/user/:name`}\r\n        component={User}\r\n      />\r\n      <Route\r\n        exact\r\n        path={`${process.env.PUBLIC_URL}/user/:category/:userName`}\r\n        component={CategoryRouter}\r\n      />\r\n      <Route\r\n        exact\r\n        path={`${process.env.PUBLIC_URL}/user/:category/:userName/page/:page`}\r\n        component={CategoryRouter}\r\n      />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default StoriesRouter;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./styles/header.module.css\";\r\n\r\nconst Logo = props => {\r\n  return <div className={styles.logo}>Hacker News</div>;\r\n};\r\n\r\nconst Navigation = props => {\r\n  const activeStyle = { color: \"red\" };\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <NavLink to={`/`} activeStyle={activeStyle} exact>\r\n        Home\r\n      </NavLink>\r\n      {\" | \"}\r\n      <NavLink to={`/best`} activeStyle={activeStyle}>\r\n        Best\r\n      </NavLink>\r\n      {\" | \"}\r\n      <NavLink to={`/new`} activeStyle={activeStyle}>\r\n        New\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className={styles.header}>\r\n      <Logo />\r\n      <Navigation />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"../story/Card\";\r\nimport Comments from \"./Comments\"\r\nimport * as api from \"../services/hackernewsapi\";\r\nimport WaitingForData from \"../common/WaitingForData\"\r\nimport styles from \"./comments.module.css\"\r\n\r\nclass FullStory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      itemData: {},\r\n      comments: [],\r\n      hasError: false,\r\n      notFound: false,\r\n      isFetching: true\r\n    };\r\n    \r\n    this.getItemData(props.match.params.id);\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n    // You can also log the error to an error reporting service\r\n  }\r\n\r\n\r\n  getItemData(id) {\r\n    let itemData = api.getItem(id);\r\n    itemData.then(i => {\r\n      let itemData = i.val();\r\n      if(itemData) this.setState({ itemData, isFetching: false });\r\n      else this.setState({notFound: true})\r\n      \r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(this.state.hasError) {\r\n      return <div className=\"error\">Error occured!</div>\r\n    }\r\n    if(this.state.notFound) {\r\n      return <div className={styles.fullStory}>We could not find the following item.</div>\r\n    }\r\n\r\n    return (\r\n      <div className={styles.fullStory}>\r\n      <WaitingForData isFetching={this.state.isFetching}>\r\n        <Card {...this.state.itemData}/>\r\n        <Comments storyId={this.props.match.params.id} />\r\n        </WaitingForData>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FullStory;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport styles from \"./app.module.css\";\r\nimport StoriesRouter from \"./story/StoriesRouter\";\r\nimport UserRouter from \"./user/Router\";\r\nimport Header from \"./common/Header\";\r\nimport FullStory from \"./comments/FullStory\";\r\nimport NotFound from \"./common/NotFound\";\r\n\r\nimport * as storyTypes from \"./services/operationTypes\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n    console.log(\"Change V1\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={styles.container}>\r\n          <Header />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={`/`}\r\n              render={() => {\r\n                console.log(\"Matched exact homepage!!!!!\");\r\n                return <Redirect to={`/top`} />;\r\n              }}\r\n            />\r\n\r\n            <Route\r\n              path={`/top`}\r\n              render={props => (\r\n                <StoriesRouter\r\n                  {...props}\r\n                  category={storyTypes.GET_TOP_STORIES}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Route\r\n              path={`/best`}\r\n              render={props => (\r\n                <StoriesRouter\r\n                  {...props}\r\n                  category={storyTypes.GET_BEST_STORIES}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path={`/new`}\r\n              render={props => (\r\n                <StoriesRouter\r\n                  {...props}\r\n                  category={storyTypes.GET_NEW_STORIES}\r\n                />\r\n              )}\r\n            />\r\n            <Route exact path={`/story/:id`} component={FullStory} />\r\n            <Route path={`/user/:name`} component={UserRouter} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Root from \"./Root\"\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","import React from \"react\";\r\nimport App from \"./App\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from 'react-router-dom'\r\n\r\nexport default function Root(props) {\r\n  return (\r\n    <Router basename=\"hacker-news-reactjs\">\r\n      <Route path=\"/\" component={App} />\r\n    </Router>\r\n  );\r\n}\r\n"],"sourceRoot":""}